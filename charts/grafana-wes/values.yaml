# Default values for grafana-wes.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "grafana"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx-wes
    kubernetes.io/tls-acme: "true"
  hosts:
    - host: grafana-jamie.elastiscale.net
      paths:
        - /
  tls: 
    - secretName: grafana-jamie-elastiscale-net
      hosts:
        - grafana-jamie.elastiscale.net

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

grafana:
  deploymentStrategy:
    type: Recreate
  nodeSelector:
    node-role.kubernetes.io/controlplane: "true"
  persistence:
    type: pvc
    enabled: true
    existingClaim: grafana-data
##  ingress:
##    enabled: true
##    annotations:
##      kubernetes.io/ingress.class: nginx-wes
##      kubernetes.io/tls-acme: "true"
##    labels: {}
##    path: /
##  
##    hosts:
##      - grafana-jamie.elastiscale.net
###      - path: /*
###        backend:
###          serviceName: ssl-redirect
###          servicePort: use-annotation
##    ## Or for k8s > 1.19
##    # - path: /*
##    #   pathType: Prefix
##    #   backend:
##    #     service:
##    #       name: ssl-redirect
##    #       port:
##    #         name: service
##
##
##  tls:
##      - secretName: grafana-jamie-elastiscale-net
##        hosts:
##          - grafana-jamie.elastiscale.net
##  #  - secretName: chart-example-tls
##  #    hosts:
##  #      - chart-example.local
##
###  ingress:
###    enabled: true
###    annotations:
###      kubernetes.io/ingress.class: nginx-wes
###      kubernetes.io/tls-acme: "true"
###    hosts:
###      - host: grafana-jamie.elastiscale.net
###        paths:
###          - path: /
###    tls: 
###      - secretName: grafana-jamie-elastiscale-net
###        hosts:
###          - grafana-jamie.elastiscale.net
##
###  ingress:
###    enabled: true
###    # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
###    # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
###    # ingressClassName: nginx
###    # Values can be templated
###    annotations:
###      kubernetes.io/ingress.class: nginx-wes
###      kubernetes.io/tls-acme: "true"
###    labels: {}
###    path: /
###  
###    hosts:
###      - grafana-jamie.elastiscale.net
###      - path: /*
###        backend:
###          serviceName: ssl-redirect
###          servicePort: use-annotation
###    tls:
###    - secretName: grafana-jamie-elastiscale-net
###      hosts:
###        - grafana-jamie.elastiscale.net
