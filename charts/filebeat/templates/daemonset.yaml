apiVersion: apps/v1beta2
kind: DaemonSet
metadata:
  name: {{ template "filebeat.fullname" . }}
  labels:
    app: {{ template "filebeat.name" . }}
    chart: {{ template "filebeat.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "filebeat.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "filebeat.name" . }}
        release: {{ .Release.Name }}
    spec:
      volumes:
      - hostPath:
          path: /var/log
          type: ""
        name: var-log
      - hostPath:
          path: /var/lib/docker/containers/
          type: ""
        name: containers
      - hostPath:
          path: /var/tmp/fb-registry
          type: ""
        name: fb-registry
      - name: podinfo
        downwardAPI:
          items:
            - path: "node_name"
              resourceFieldRef: 
                containerName: client-container
                resource: spec.nodeName
            - path: "host_ip"
              resourceFieldRef: 
                containerName: client-container
                resource: status.hostIP
            - path: "container_name"
              resourceFieldRef:
                containerName: client-container
                resource: metadata.name
      containers:
        - name: {{ .Chart.Name }}
          command: "/bin/bash"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: LOCATION
              value: {{ .Values.filebeat.location }}
            - name: LOGSTASH_HOSTS
              value: {{ .Values.filebeat.logstash_hosts }}
          volumeMounts:
            - mountPath: /host-var-log/
              name: var-log
            - mountPath: /containers/
              name: containers
            - mountPath: /registry
              name: fb-registry
            - mountPath: /podinfo
              name: podinfo
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
