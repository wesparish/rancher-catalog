oauth2-proxy:
  redis:
    enabled: false
  configuration:
    # kubectl -n oauth2-proxy create secret generic oauth2-proxy-secrets \
    # --from-literal=client-id='<from authentik provider>' \
    # --from-literal=client-secret='<from authentik provider>' \
    # --from-literal=cookie-secret="$(openssl rand -base64 32 | head -c 32 | base64)"
    existingSecret: "oauth2-proxy-secrets"
    content: |-
      provider="oidc"
      # provider-display-name="Authentik"
      # redirect-url: not used?
      oidc_issuer_url="https://authentik.elastiscale.net/application/o/k8s/"
      # allowed-group: k8s-users
      # set-authorization-header = true
      # set-x-auth-request-user = true
      # set-x-auth-request-email = true
      # set-x-auth-request-groups = true
      email_domains=["elastiscale.net"]
      # cookie_refresh = "1m"
      # cookie_expire = "7d"
      cookie_domains = ["elastiscale.net"]
      whitelist_domains = ["*.elastiscale.net"]
      show_debug_on_error = true
      silence_ping_logging = true
  ingress:
    enabled: "true"
    ingressClassName: "nginx-wes"
    hostname: "oauth2-proxy-authentik.elastiscale.net"
    annotations:
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: 2000m
      nginx.ingress.kubernetes.io/proxy-buffer-size: 16k
    tls: "true"
    certManager: "true"

# # Default values for oauth2-proxy-wes.
# # This is a YAML-formatted file.
# # Declare variables to be passed into your templates.

# replicaCount: 1

# image:
#   repository: nginx
#   pullPolicy: IfNotPresent
#   # Overrides the image tag whose default is the chart appVersion.
#   tag: ""

# imagePullSecrets: []
# nameOverride: ""
# fullnameOverride: ""

# serviceAccount:
#   # Specifies whether a service account should be created
#   create: true
#   # Automatically mount a ServiceAccount's API credentials?
#   automount: true
#   # Annotations to add to the service account
#   annotations: {}
#   # The name of the service account to use.
#   # If not set and create is true, a name is generated using the fullname template
#   name: ""

# podAnnotations: {}
# podLabels: {}

# podSecurityContext: {}
#   # fsGroup: 2000

# securityContext: {}
#   # capabilities:
#   #   drop:
#   #   - ALL
#   # readOnlyRootFilesystem: true
#   # runAsNonRoot: true
#   # runAsUser: 1000

# service:
#   type: ClusterIP
#   port: 80

# ingress:
#   enabled: false
#   className: ""
#   annotations: {}
#     # kubernetes.io/ingress.class: nginx
#     # kubernetes.io/tls-acme: "true"
#   hosts:
#     - host: chart-example.local
#       paths:
#         - path: /
#           pathType: ImplementationSpecific
#   tls: []
#   #  - secretName: chart-example-tls
#   #    hosts:
#   #      - chart-example.local

# resources: {}
#   # We usually recommend not to specify default resources and to leave this as a conscious
#   # choice for the user. This also increases chances charts run on environments with little
#   # resources, such as Minikube. If you do want to specify resources, uncomment the following
#   # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#   # limits:
#   #   cpu: 100m
#   #   memory: 128Mi
#   # requests:
#   #   cpu: 100m
#   #   memory: 128Mi

# livenessProbe:
#   httpGet:
#     path: /
#     port: http
# readinessProbe:
#   httpGet:
#     path: /
#     port: http

# autoscaling:
#   enabled: false
#   minReplicas: 1
#   maxReplicas: 100
#   targetCPUUtilizationPercentage: 80
#   # targetMemoryUtilizationPercentage: 80

# # Additional volumes on the output Deployment definition.
# volumes: []
# # - name: foo
# #   secret:
# #     secretName: mysecret
# #     optional: false

# # Additional volumeMounts on the output Deployment definition.
# volumeMounts: []
# # - name: foo
# #   mountPath: "/etc/foo"
# #   readOnly: true

# nodeSelector: {}

# tolerations: []

# affinity: {}
