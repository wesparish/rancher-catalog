apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "the-spaghetti-detective.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "the-spaghetti-detective.name" . }}
    helm.sh/chart: {{ include "the-spaghetti-detective.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "the-spaghetti-detective.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "the-spaghetti-detective.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}-redis
          image: "{{ .Values.image.redis.repository }}:{{ .Values.image.redis.tag }}"
          imagePullPolicy: {{ .Values.image.redis.pullPolicy }}
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 120
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 30
            timeoutSeconds: 3
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources.redis | nindent 12 }}

        - name: {{ .Chart.Name }}-web
          image: "{{ .Values.image.web.repository }}:{{ .Values.image.web.tag }}"
          imagePullPolicy: {{ .Values.image.web.pullPolicy }}
          command:
            - "bash"
            - "-c"
            - "python manage.py collectstatic --noinput -c && python manage.py migrate && python manage.py runserver 0.0.0.0:3334"
          env:
            - name: "EMAIL_HOST"
              value: "172.16.1.13"
            - name:  "EMAIL_HOST_USER"
              value: 
            - name: "EMAIL_HOST_PASSWORD"
              value: 
            - name: "EMAIL_PORT"
              value: "25"
            - name: "EMAIL_USE_TLS"
              value: 
            - name: "DEFAULT_FROM_EMAIL"
              value: "tsd@elastiscale.net"
            - name: "SITE_USES_HTTPS"
              value: "True"
            - name: "SOCIAL_LOGIN"
              value: 
            - name: "REDIS_URL"
              value: "redis://localhost:6379"
            - name: "DATABASE_URL"
              value: "sqlite:////app/db.sqlite3"
            - name: "INTERNAL_MEDIA_HOST"
              value: "http://web:3334"
            - name: "ML_API_HOST"
              value: "http://localhost:3333"
            - name: "INTERNAL_MEDIA_HOST"
              value: "http://localhost:3334"
          ports:
            - name: http
              containerPort: 3334
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 3334
          readinessProbe:
            httpGet:
              path: /
              port: 3334
          volumeMounts:
            - name: web
              mountPath: /app
          resources:
            {{- toYaml .Values.resources.web | nindent 12 }}

        - name: {{ .Chart.Name }}-ml-api
          image: "{{ .Values.image.ml_api.repository }}:{{ .Values.image.ml_api.tag }}"
          imagePullPolicy: {{ .Values.image.ml_api.pullPolicy }}
          env:
            - name: "DEBUG"
              value: "True"
            - name: "FLASK_APP"
              value: "server.py"
          command:
            - sh
            - -c
            - python server.py
          ports:
            - name: http
              containerPort: 3333
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /p/
              port: 3333
          readinessProbe:
            httpGet:
              path: /p/
              port: 3333
          resources:
            {{- toYaml .Values.resources.web | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: web
          persistentVolumeClaim:
            claimName: tsd-app-pvc
