kube-prometheus-stack:
  grafana:
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx-wes
        kubernetes.io/tls-acme: "true"
      hosts:
        - grafana.elastiscale.net
      paths:
        - /
      pathType: ImplementationSpecific
      tls:
        - secretName: grafana.elastiscale.net-tls
          hosts:
          - grafana.elastiscale.net
    persistence:
      enabled: true
      existingClaim: kube-prometheus-stack-data
      subPath: grafana

    grafana.ini:
      feature_toggles:
        # 20250510 enable git dashboard sync
        # https://grafana.com/docs/grafana/next/observability-as-code/provision-resources/git-sync-setup/
        provisioning: true
        kubernetesDashboards: true
      database:
        type: postgres
        host: kube-prometheus-stack-postgresql:5432
        name: grafana
        user: grafana
        password: grafana
        ssl_mode: disable
    assertNoLeakedSecrets: false

  prometheus:
    prometheusSpec:
      retention: 60d
      storageSpec:
        # emptyDir: {}
        volumeClaimTemplate:
          spec:
            # Name of the PV you created beforehand
            volumeName: kube-prometheus-stack-prometheus-data
            accessModes: ["ReadWriteMany"]
            # StorageClass should match your existing PV's storage class
            storageClassName: ""
            resources:
              requests:
                # Size below should match your existing PV's size
                storage: 50Gi
      # Find all service monitors and pod monitors
      serviceMonitorSelectorNilUsesHelmValues: false
      serviceMonitorSelector: {}
      podMonitorSelectorNilUsesHelmValues: false
      podMonitorSelector: {}
      # 20250204 https://github.com/prometheus-operator/kube-prometheus/issues/1392#issuecomment-1411719953
      ruleSelectorNilUsesHelmValues: false
      probeSelectorNilUsesHelmValues: false

      scrapeInterval: "30s"
      evaluationInterval: "30s"

      additionalScrapeConfigs:
      - job_name: ceph-exporter
        metrics_path: /metrics
        static_configs:
          - targets:
            # All w-dock ceph hosts
            - w-dock5.weshouse:9283
            - w-dock7.weshouse:9283
            - w-dock8.weshouse:9283
            - w-dock9.weshouse:9283

postgresql:
  enabled: false
  auth:
    username: grafana
    password: grafana
    database: grafana
  primary:
    persistence:
      existingClaim: kube-prometheus-stack-data
      subPath: postgres-grafana
  backup:
    enabled: true
    cronjob:
      storage:
        existingClaim: kube-prometheus-stack-data
        subPath: postgres-grafana-backup
      command:
        - /bin/bash
        - -c
        - |
          backup_dir="$PGDUMP_DIR/"
          mkdir -p $backup_dir
          echo "Backing up grafana postgresql to: $backup_dir"
          cd $backup_dir
          export PGPASSWORD=grafana
          pg_dump -v --host kube-prometheus-stack-postgresql -U grafana -d grafana -p 5432 > grafana_$(date -I).sql
          echo "Cleaning up old backups"
          find $backup_dir -mtime +10 -delete
          echo "Current backups:"
          find $backup_dir
          echo "Done"