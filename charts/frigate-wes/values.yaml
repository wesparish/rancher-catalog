frigate:
  nodeSelector:
    kubernetes.io/hostname: w-dock9
    ceph-client: "true"

  image:
    # -- Docker registry/repository to pull the image from
    repository: blakeblackshear/frigate
    # -- Overrides the default tag (appVersion) used in Chart.yaml ([Docker Hub](https://hub.docker.com/r/blakeblackshear/frigate/tags?page=1))
    tag: 0.10.1-amd64 #nvidia
    # -- Docker image pull policy
    pullPolicy: IfNotPresent

  env:
    TZ: "America/Chicago"

  envFromSecrets:
    # kubectl -n frigate create secret generic frigate-env-secrets \
    #   --from-literal=FRIGATE_CAMERA_USER=<user> \
    #   --from-literal=FRIGATE_CAMERA_PASSWORD=<pwd>
    - frigate-env-secrets

#  gpu:
#    nvidia:
#      enabled: true
#      runtimeClassName: 

  config: |
    ffmpeg:
      output_args:
        # Optional: output args for record streams (default: shown below)
        #record: -f segment -segment_time 10 -segment_format mp4 -reset_timestamps 1 -strftime 1 -c copy -an
        # Record audio also: https://docs.frigate.video/faqs/
        record: -f segment -segment_time 10 -segment_format mp4 -reset_timestamps 1 -strftime 1 -c:v copy -c:a aac
    mqtt:
      # Required: host name
      host: 172.16.1.229
      # Optional: port (default: shown below)
      port: 1883
      # Optional: topic prefix (default: shown below)
      # WARNING: must be unique if you are running multiple instances
      topic_prefix: frigate
      # Optional: client id (default: shown below)
      # WARNING: must be unique if you are running multiple instances
      client_id: frigate
      # Optional: user
      # user: mqtt_user
      # Optional: password
      # NOTE: Environment variables that begin with 'FRIGATE_' may be referenced in {}.
      #       eg. password: '{FRIGATE_MQTT_PASSWORD}'
      # password: password
      # Optional: interval in seconds for publishing stats (default: shown below)
      stats_interval: 60
    detectors:
      # coral:
      #   type: edgetpu
      #   device: usb
      cpu1:
        type: cpu
      cpu2:
        type: cpu
      cpu3:
        type: cpu
      cpu4:
        type: cpu
    cameras:
      # Name of your camera
      front_patio:
        ffmpeg:
          inputs:
            - path: rtsp://{FRIGATE_CAMERA_USER}:{FRIGATE_CAMERA_PASSWORD}@172.16.1.83:554//h264Preview_01_main
              roles:
                - detect
                - rtmp
        detect:
          width: 1280
          height: 720
          fps: 5
      back_patio:
        ffmpeg:
          inputs:
            - path: rtsp://{FRIGATE_CAMERA_USER}:{FRIGATE_CAMERA_PASSWORD}@172.16.1.82:554//h264Preview_01_main
              roles:
                - detect
                - rtmp
        detect:
          width: 1280
          height: 720
          fps: 5
      driveway:
        ffmpeg:
          inputs:
            - path: rtsp://{FRIGATE_CAMERA_USER}:{FRIGATE_CAMERA_PASSWORD}@172.16.1.80:554//h264Preview_01_main
              roles:
                - detect
                - rtmp
        detect:
          width: 1280
          height: 720
          fps: 5
    record:
      enabled: True
      #retain:
      #  days: 10
      #  mode: motion
      events:
        retain:
          default: 10
      #    mode: motion
    snapshots:
      enabled: True
      # Optional: draw bounding box on the snapshots (default: shown below)
      bounding_box: True
      # Optional: crop the snapshot (default: shown below)
      crop: False
      # Optional: Camera override for retention settings (default: global values)
      retain:
        # Required: Default retention days (default: shown below)
        default: 10

  service:
    # -- Type of Service to use
    type: LoadBalancer
    # -- Port the Service should communicate on
    #port: 5000
    ## Specify the nodePort value for the LoadBalancer and NodePort service types.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    ##
    # nodePort:
    ## Provide any additional annotations which may be required. This can be used to
    ## set the LoadBalancer service type to internal only.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
    ##
    annotations: #{}
      metallb.universe.tf/address-pool: default
      metallb.universe.tf/allow-shared-ip: default
    #labels: {}
  
    # -- Set specific IP address for LoadBalancer. `service.type` must be set to `LoadBalancer`
    loadBalancerIP: 172.16.1.235
  
    # loadBalancerSourceRanges: []
    ## Set the externalTrafficPolicy in the Service to either Cluster or Local
    externalTrafficPolicy: Local
  
#  persistence:
#    data:
#      enabled: true
#      existingClaim: frigate-data
  extraVolumes:
    - name: media
      persistentVolumeClaim:
        claimName: frigate-data
  extraVolumeMounts:
    - mountPath: /media
      name: media
