apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "claymore-amd-scalable.fullname" . }}
  labels:
    app: {{ template "claymore-amd-scalable.name" . }}
    chart: {{ template "claymore-amd-scalable.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "claymore-amd-scalable.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "claymore-amd-scalable.name" . }}
        release: {{ .Release.Name }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: gpu-type
                operator: In
                values:
                - amd
              - key: miner
                operator: In
                values:
                - {{ .Values.claymore.scalablelabel }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: container.type
                operator: In
                values:
                - miner
            topologyKey: "kubernetes.io/hostname"
      volumes:
      - hostPath:
          path: /dev/dri
          type: ""
        name: dev-dri
      - hostPath:
          path: /sys
          type: ""
        name: sys
      containers:
        - name: {{ .Chart.Name }}
          env:
            - name: WALLET_ADDRESS
              value: {{ .Values.claymore.wallet }}
            - name: CLAYMORE_OPTS
              value: {{ .Values.claymore.options }}
            - name: HOSTS
              value: {{ .Values.claymore.poolhosts }}
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
              - ALL
            privileged: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          volumeMounts:
          - mountPath: /dev/dri
            name: dev-dri
          - mountPath: /sys
            name: sys
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
