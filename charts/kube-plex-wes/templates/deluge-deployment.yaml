# Deploys deluge
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-plex-wes-deluge
  labels:
    app.kubernetes.io/name: kube-plex-wes-deluge
    helm.sh/chart: kube-plex-wes
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: kube-plex-wes-deluge-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-plex-wes-deluge
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-plex-wes-deluge
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: deluge
          image: wesparish/deluge
          imagePullPolicy: IfNotPresent
          ports:
            - name: deluge-web
              containerPort: 8282
              protocol: TCP
            - name: deluge2
              containerPort: 8444
              protocol: TCP
            - name: deluge-daemon
              containerPort: 58846
              protocol: TCP
          volumeMounts:
          - name: plex-data
            mountPath: /plex_media
          - name: deluge-config
            mountPath: /config
          livenessProbe:
            httpGet:
              path: /
              port: 8282
            initialDeplaySeconds: 60
          readinessProbe:
            httpGet:
              path: /
              port: 8282
            initialDeplaySeconds: 60
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      - name: plex-data
        persistentVolumeClaim:
          claimName: "plex-data"
      - name: deluge-config
        persistentVolumeClaim:
          claimName: "deluge-config"
