# Default values for netmaker-wes.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Used for basic auth
auth: wes:$apr1$sLLQK9lR$NBDb6NtuzOC6sTHxZ1tuC0

netmaker:
  baseDomain: "elastiscale.net"
  # -- number of netmaker server replicas to create 
  replicas: 3
  
  image:
    # -- The image repo to pull Netmaker image from 
    repository: gravitl/netmaker
    # -- Pull Policy for images
    pullPolicy: Always
    # -- Override the image tag to pull 
    tag: "v0.8.4-kube"
  
  # -- override the name for netmaker objects 
  nameOverride: ""  
  
  # -- override the full name for netmaker objects 
  fullnameOverride: ""
  
  serviceAccount:
    # -- Specifies whether a service account should be created
    create: true
    # -- Annotations to add to the service account
    annotations: {}
    # -- Name of SA to use. If not set and create is true, a name is generated using the fullname template
    name: ""
  
  # -- pod annotations to add
  podAnnotations: {}
  
  # -- pod security contect to add
  podSecurityContext: {}
    # fsGroup: 2000
  
  ui:
    # -- how many UI replicas to create
    replicas: 2
  
  setIpForwarding:
    enabled: true
  
  service:
    # -- type for netmaker server services
    type: ClusterIP
    # -- port for API service
    restPort: 8081
    # -- port for GRPC service
    grpcPort: 443
    # -- port for UI service
    uiPort: 80
  
  ingress:
    className: nginx-wes
    type: nginx
    # -- attempts to configure ingress if true
    enabled: true
    tls:
      enabled: true
      issuerName: ""
    annotations:
      base:
        # -- annotation to generate ACME certs if available
        kubernetes.io/ingress.allow-http: "false"    
        #kubernetes.io/ingress.class: "nginx-wes"
      ui:
        nginx:
          nginx.ingress.kubernetes.io/auth-realm: Authentication Required - Netmaker
          nginx.ingress.kubernetes.io/auth-secret: basic-auth
          nginx.ingress.kubernetes.io/auth-type: basic
          nginx.ingress.kubernetes.io/proxy-body-size: 200m
      tls:
        # -- use acme cert if available
        kubernetes.io/tls-acme: "true"
      nginx:
        # -- Redirect http to https 
        nginx.ingress.kubernetes.io/ssl-redirect: 'true'
        # -- destination addr for route
        nginx.ingress.kubernetes.io/rewrite-target: /
      traefik:
        # -- Redirect to https
        traefik.ingress.kubernetes.io/redirect-entry-point: https
        # -- Redirect to https permanently
        traefik.ingress.kubernetes.io/redirect-permanent: "true"
        # -- rule type
        traefik.ingress.kubernetes.io/rule-type: "PathPrefixStrip"
      grpc:
        nginx:
          # -- annotation to use grpc protocol on grpc domain
          nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
        traefik:
          # -- annotation to use grpc protocol on grpc domain
          ingress.kubernetes.io/protocol: "h2c"
    hostPrefix:
      # -- ui route subdomain
      ui: 'netmaker-dashboard.'
      # -- api (REST) route subdomain
      rest: 'netmaker-api.'
      # -- grpc route subdomain
      grpc: 'netmaker-grpc.'
  
  wireguard:
    # -- whether or not to use WireGuard on server
    enabled: true
    # -- whether or not to use Kernel WG (should be false unless WireGuard is installed on hosts).
    kernel: false
    # -- max number of networks that Netmaker will support if running with WireGuard enabled
    networkLimit: 10
  
  dns:
    # -- whether or not to run with DNS (CoreDNS)
    enabled: false
    # -- volume size for DNS (only needs to hold one file)
    storageSize: 128Mi
  
  postgresql:
    database: netmaker
    username: netmaker
    password: netmaker
    persistence:
      # Wes
      existingClaim: netmaker-data
