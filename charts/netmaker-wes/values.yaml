# Default values for netmaker-wes.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Used for basic auth
auth: wes:$apr1$sLLQK9lR$NBDb6NtuzOC6sTHxZ1tuC0

# global:
#   postgresql:
#     auth:
#       username: netmaker
#       password: netmaker
#       database: netmaker

netmaker:
  baseDomain: "elastiscale.net"
  # -- number of netmaker server replicas to create
  replicas: 3

  persistence:
    existingClaim: netmaker-data

  wireguard:
    dbHost: netmaker-postgresql

  ingress:
    enabled: true
    className: nginx-wes
    # className: nginx
    # type: nginx
    # -- attempts to configure ingress if true
    tls:
      enabled: true
      issuerName: "letsencrypt-production"
    annotations:
      base:
        # -- annotation to generate ACME certs if available
        kubernetes.io/ingress.allow-http: "false"
      ui:
        nginx.ingress.kubernetes.io/auth-realm: Authentication Required - Netmaker
        nginx.ingress.kubernetes.io/auth-secret: basic-auth
        nginx.ingress.kubernetes.io/auth-type: basic
        nginx.ingress.kubernetes.io/proxy-body-size: 200m
      tls:
        # -- use acme cert if available
        kubernetes.io/tls-acme: "true"
      nginx:
        # -- Redirect http to https
        nginx.ingress.kubernetes.io/ssl-redirect: 'true'
        # -- destination addr for route
        nginx.ingress.kubernetes.io/rewrite-target: /
      traefik:
        # -- Redirect to https
        traefik.ingress.kubernetes.io/redirect-entry-point: https
        # -- Redirect to https permanently
        traefik.ingress.kubernetes.io/redirect-permanent: "true"
        # -- rule type
        traefik.ingress.kubernetes.io/rule-type: "PathPrefixStrip"
      nginx-wes:
        # -- Redirect http to https
        nginx.ingress.kubernetes.io/ssl-redirect: 'true'
        # -- destination addr for route
        nginx.ingress.kubernetes.io/rewrite-target: /
    hostPrefix:
      # -- ui route subdomain
      ui: 'netmaker-dashboard.'
      # -- api (REST) route subdomain
      rest: 'netmaker-api.'
    # -- mqtt route subdomain
    broker: 'netmaker-broker.'

  postgresql-ha:
    # Running external postgres in this chart
    enabled: false

  mq:
    existingClaim: netmaker-data

postgresql:
  auth:
    # -- postgres user to generate
    username: netmaker
    # -- postgres pass to generate
    password: netmaker
    # -- postgress db to generate
    database: netmaker
  primary:
    persistence:
      existingClaim: netmaker-data