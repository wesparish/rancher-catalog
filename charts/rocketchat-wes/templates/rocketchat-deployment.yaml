apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rocketchat-wes.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "rocketchat-wes.name" . }}
    helm.sh/chart: {{ include "rocketchat-wes.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "rocketchat-wes.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "rocketchat-wes.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: DEPLOY_PLATFORM
            value: helm-chart
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: MONGO_URL
            value: mongodb://{{ include "rocketchat-wes.fullname" . }}-mongodb:27017/rocketchat
          - name: MONGO_OPLOG_URL
            value: mongodb://{{ include "rocketchat-wes.fullname" . }}-mongodb:27017/local
          - name: ROOT_URL
            value: {{ .Values.rocketchat.config.ROOT_URL }}
          - name: MAIL_URL
            value: smtp://{{ .Values.rocketchat.config.SMTP_Host }}:{{ .Values.rocketchat.config.SMTP_Port }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            failureThreshold: 36
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            failureThreshold: 36
            periodSeconds: 5
          volumeMounts:
          - name: rocket-data
            mountPath: /app/uploads
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      initContainers:
        - name: {{ .Chart.Name }}-configure-mongodb
          image:  {{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - name: data
            mountPath: /data
          command: 
            - 'mongo mongo/rocketchat --eval "rs.initiate({ _id: ''rs0'', members: [ { _id: 0, host: ''localhost:27017'' } ]})"'

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      - name: rocket-data
        persistentVolumeClaim:
          claimName: {{ .Values.rocketchat.persistence.existingClaim }}
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Values.mongodb.persistence.existingClaim }}
